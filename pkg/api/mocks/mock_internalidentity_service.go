// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/common-fate/granted-approvals/pkg/api (interfaces: InternalIdentityService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	identity "github.com/common-fate/granted-approvals/pkg/identity"
	types "github.com/common-fate/granted-approvals/pkg/types"
	gomock "github.com/golang/mock/gomock"
)

// MockInternalIdentityService is a mock of InternalIdentityService interface.
type MockInternalIdentityService struct {
	ctrl     *gomock.Controller
	recorder *MockInternalIdentityServiceMockRecorder
}

// MockInternalIdentityServiceMockRecorder is the mock recorder for MockInternalIdentityService.
type MockInternalIdentityServiceMockRecorder struct {
	mock *MockInternalIdentityService
}

// NewMockInternalIdentityService creates a new mock instance.
func NewMockInternalIdentityService(ctrl *gomock.Controller) *MockInternalIdentityService {
	mock := &MockInternalIdentityService{ctrl: ctrl}
	mock.recorder = &MockInternalIdentityServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalIdentityService) EXPECT() *MockInternalIdentityServiceMockRecorder {
	return m.recorder
}

// CreateGroup mocks base method.
func (m *MockInternalIdentityService) CreateGroup(arg0 context.Context, arg1 types.CreateGroupRequest) (*identity.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGroup", arg0, arg1)
	ret0, _ := ret[0].(*identity.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGroup indicates an expected call of CreateGroup.
func (mr *MockInternalIdentityServiceMockRecorder) CreateGroup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGroup", reflect.TypeOf((*MockInternalIdentityService)(nil).CreateGroup), arg0, arg1)
}

// UpdateGroup mocks base method.
func (m *MockInternalIdentityService) UpdateGroup(arg0 context.Context, arg1 identity.Group, arg2 types.CreateGroupRequest) (*identity.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(*identity.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateGroup indicates an expected call of UpdateGroup.
func (mr *MockInternalIdentityServiceMockRecorder) UpdateGroup(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGroup", reflect.TypeOf((*MockInternalIdentityService)(nil).UpdateGroup), arg0, arg1, arg2)
}

// UpdateUserGroups mocks base method.
func (m *MockInternalIdentityService) UpdateUserGroups(arg0 context.Context, arg1 identity.User, arg2 []string) (*identity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserGroups", arg0, arg1, arg2)
	ret0, _ := ret[0].(*identity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateUserGroups indicates an expected call of UpdateUserGroups.
func (mr *MockInternalIdentityServiceMockRecorder) UpdateUserGroups(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserGroups", reflect.TypeOf((*MockInternalIdentityService)(nil).UpdateUserGroups), arg0, arg1, arg2)
}
