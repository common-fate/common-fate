// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/common-fate/granted-approvals/pkg/api (interfaces: CognitoService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	identity "github.com/common-fate/granted-approvals/pkg/identity"
	cognitosvc "github.com/common-fate/granted-approvals/pkg/service/cognitosvc"
	gomock "github.com/golang/mock/gomock"
)

// MockCognitoService is a mock of CognitoService interface.
type MockCognitoService struct {
	ctrl     *gomock.Controller
	recorder *MockCognitoServiceMockRecorder
}

// MockCognitoServiceMockRecorder is the mock recorder for MockCognitoService.
type MockCognitoServiceMockRecorder struct {
	mock *MockCognitoService
}

// NewMockCognitoService creates a new mock instance.
func NewMockCognitoService(ctrl *gomock.Controller) *MockCognitoService {
	mock := &MockCognitoService{ctrl: ctrl}
	mock.recorder = &MockCognitoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCognitoService) EXPECT() *MockCognitoServiceMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockCognitoService) CreateUser(arg0 context.Context, arg1 cognitosvc.CreateUserOpts) (*identity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0, arg1)
	ret0, _ := ret[0].(*identity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockCognitoServiceMockRecorder) CreateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockCognitoService)(nil).CreateUser), arg0, arg1)
}

// UpdateUserGroups mocks base method.
func (m *MockCognitoService) UpdateUserGroups(arg0 context.Context, arg1 cognitosvc.UpdateUserGroupsOpts) (*identity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserGroups", arg0, arg1)
	ret0, _ := ret[0].(*identity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateUserGroups indicates an expected call of UpdateUserGroups.
func (mr *MockCognitoServiceMockRecorder) UpdateUserGroups(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserGroups", reflect.TypeOf((*MockCognitoService)(nil).UpdateUserGroups), arg0, arg1)
}
