// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/common-fate/common-fate/pkg/api (interfaces: CognitoService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	identity "github.com/common-fate/common-fate/pkg/identity"
	cognitosvc "github.com/common-fate/common-fate/pkg/service/cognitosvc"
	gomock "github.com/golang/mock/gomock"
)

// MockCognitoService is a mock of CognitoService interface.
type MockCognitoService struct {
	ctrl     *gomock.Controller
	recorder *MockCognitoServiceMockRecorder
}

// MockCognitoServiceMockRecorder is the mock recorder for MockCognitoService.
type MockCognitoServiceMockRecorder struct {
	mock *MockCognitoService
}

// NewMockCognitoService creates a new mock instance.
func NewMockCognitoService(ctrl *gomock.Controller) *MockCognitoService {
	mock := &MockCognitoService{ctrl: ctrl}
	mock.recorder = &MockCognitoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCognitoService) EXPECT() *MockCognitoServiceMockRecorder {
	return m.recorder
}

// AdminCreateUser mocks base method.
func (m *MockCognitoService) AdminCreateUser(arg0 context.Context, arg1 cognitosvc.CreateUserOpts) (*identity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdminCreateUser", arg0, arg1)
	ret0, _ := ret[0].(*identity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AdminCreateUser indicates an expected call of AdminCreateUser.
func (mr *MockCognitoServiceMockRecorder) AdminCreateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdminCreateUser", reflect.TypeOf((*MockCognitoService)(nil).AdminCreateUser), arg0, arg1)
}

// AdminUpdateUserGroups mocks base method.
func (m *MockCognitoService) AdminUpdateUserGroups(arg0 context.Context, arg1 cognitosvc.UpdateUserGroupsOpts) (*identity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdminUpdateUserGroups", arg0, arg1)
	ret0, _ := ret[0].(*identity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AdminUpdateUserGroups indicates an expected call of AdminUpdateUserGroups.
func (mr *MockCognitoServiceMockRecorder) AdminUpdateUserGroups(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdminUpdateUserGroups", reflect.TypeOf((*MockCognitoService)(nil).AdminUpdateUserGroups), arg0, arg1)
}
