// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/common-fate/common-fate/pkg/api (interfaces: HealthcheckService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthcheckService is a mock of HealthcheckService interface.
type MockHealthcheckService struct {
	ctrl     *gomock.Controller
	recorder *MockHealthcheckServiceMockRecorder
}

// MockHealthcheckServiceMockRecorder is the mock recorder for MockHealthcheckService.
type MockHealthcheckServiceMockRecorder struct {
	mock *MockHealthcheckService
}

// NewMockHealthcheckService creates a new mock instance.
func NewMockHealthcheckService(ctrl *gomock.Controller) *MockHealthcheckService {
	mock := &MockHealthcheckService{ctrl: ctrl}
	mock.recorder = &MockHealthcheckServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthcheckService) EXPECT() *MockHealthcheckServiceMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockHealthcheckService) Check(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Check indicates an expected call of Check.
func (mr *MockHealthcheckServiceMockRecorder) Check(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockHealthcheckService)(nil).Check), arg0)
}
