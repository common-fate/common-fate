openapi: 3.0.0
info:
  title: Access Handler
  version: "1.0"
  contact:
    name: Common Fate
    url: "https://commonfate.io"
  description: Granted Access Handler API
servers:
  - url: "http://localhost:9092"
paths:
  /api/v1/grants:
    get:
      summary: List Grants
      tags:
        - grants
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    items:
                      $ref: "#/components/schemas/Grant"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: get-grants
      description: List grants.
    post:
      summary: Create Grant
      operationId: post-grants
      responses:
        "201":
          $ref: "#/components/responses/GrantResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: |-
        Create a grant.

        The returned grant ID will depend on the Access Handler's runtime. When running on AWS Lambda with Step Functions, this ID is the invocation ID of the Step Functions workflow run.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGrant"
            examples:
              Okta Provider:
                value:
                  id: req_123456
                  subject: chris@commonfate.io
                  provider: okta
                  with:
                    group: Admins
                  start: "2022-06-13T03:39:30.921Z"
                  end: "2022-06-13T11:39:30.921Z"
        description: The grant to be created.
      tags:
        - grants
    parameters: []
  /api/v1/grants/validate:
    post:
      summary: ValidateGrant
      operationId: validate-grant
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Valdates that a grant will succeed without granting the access
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGrant"
    parameters: []
  "/api/v1/grants/{grantId}/revoke":
    post:
      summary: Revoke grant
      operationId: post-grants-revoke
      responses:
        "200":
          $ref: "#/components/responses/GrantResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Revoke an active grant.
      tags:
        - grants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revokerId:
                  type: string
                  description: An id representiing the user calling this API will be included in the GrantRevoked event
              required:
                - revokerId
    parameters:
      - schema:
          type: string
        name: grantId
        in: path
        required: true
        description: The grant ID
  /api/v1/providers:
    get:
      summary: List providers
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Provider"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: list-providers
      description: List providers
    parameters: []
  /api/v1/providers/refresh:
    parameters: []
    post:
      summary: Refresh Access Providers
      operationId: refresh-access-providers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Provider"
      description: Reload any cached Access Provider configuration.
  "/api/v1/providers/{providerId}":
    get:
      summary: Get provider
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provider"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: get-provider
      description: Get a provider by id.
    parameters:
      - schema:
          type: string
        name: providerId
        in: path
        required: true
  "/api/v1/providers/{providerId}/access-instructions":
    get:
      summary: Get Access Instructions
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessInstructions"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      operationId: get-access-instructions
      description: |-
        Get access instructions for a provider.

        Returns HTTP 200 OK with a `null` field for `instructions` if the provider doesn't provide access instructions.
      parameters:
        - schema:
            type: string
          in: query
          name: subject
          required: true
          description: the user's email address
        - schema:
            type: string
          in: query
          name: args
          description: the argument payload in JSON format
          required: true
        - schema:
            type: string
          in: query
          name: grantId
          description: ID of the grant instructions
          required: true
    parameters:
      - schema:
          type: string
        name: providerId
        in: path
        required: true
  "/api/v1/providers/{providerId}/args":
    parameters:
      - schema:
          type: string
        name: providerId
        in: path
        required: true
    get:
      summary: Get provider arg schema
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: get-provider-args
      description: Returns the JSON Schema object describing the arguments for this provider.
  "/api/v1/providers/{providerId}/args/{argId}/options":
    parameters:
      - schema:
          type: string
        name: providerId
        in: path
        required: true
      - schema:
          type: string
        name: argId
        in: path
        required: true
    get:
      summary: List provider arg options
      tags: []
      responses:
        "200":
          $ref: "#/components/responses/ArgOptionsResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: list-provider-arg-options
      description: List the options for a provider argument.
  /api/v1/health:
    get:
      summary: Healthcheck
      tags:
        - runtime
      responses:
        "200":
          $ref: "#/components/responses/HealthResponse"
        "500":
          $ref: "#/components/responses/HealthResponse"
      operationId: get-health
      description: Returns information on the health of the runtime and providers. If any healthchecks fail the response code will be 500 (Internal Server Error).
  /api/v1/setup/validate:
    parameters: []
    post:
      summary: Validate an Access Provider's settings
      operationId: validate-setup
      responses:
        "200":
          $ref: "#/components/responses/ValidateResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      description: |-
        Validates settings for a provider. Does not require the provider to be registered - all configuration is passed via the request body.

        Returns a HTTP400 response if the provider cannot be validated, for example if the config is in an invalid format.
      requestBody:
        $ref: "#/components/requestBodies/ValidateRequest"
components:
  schemas:
    Grant:
      description: A temporary assignment of a user to a principal.
      type: object
      title: Grant
      x-examples:
        Okta:
          id: aba0dcba-0a8c-4393-ad92-69510326b29a
          status: PENDING
          subject: user@example.com
          provider: okta
          with:
            group: Admins
          start: "2022-06-13T03:39:30.921Z"
          end: "2022-06-13T11:39:30.921Z"
      properties:
        id:
          type: string
          example: aba0dcba-0a8c-4393-ad92-69510326b29a
          x-go-name: ID
        status:
          type: string
          description: The current state of the grant.
          enum:
            - PENDING
            - ACTIVE
            - REVOKED
            - EXPIRED
            - ERROR
        subject:
          type: string
          minLength: 1
          description: The email address of the user to grant access to.
          format: email
        provider:
          type: string
          minLength: 1
          description: The ID of the provider to grant access to.
          example: okta
        with:
          type: object
          additionalProperties:
            type: string
          description: Provider-specific grant data. Must match the provider's schema.
        start:
          type: string
          format: date-time
          description: The start time of the grant in ISO8601 format.
          example: "2022-06-13T03:39:30.921Z"
          x-go-type: iso8601.Time
        end:
          type: string
          format: date-time
          description: The end time of the grant in ISO8601 format.
          example: "2022-06-13T11:39:30.921Z"
          x-go-type: iso8601.Time
      required:
        - id
        - status
        - subject
        - provider
        - with
        - start
        - end
    CreateGrant:
      description: A grant to be created.
      type: object
      title: CreateGrant
      x-examples:
        Okta:
          subject: user@example.com
          provider: okta
          with:
            group: Admins
          start: "2022-06-13T03:39:30.921Z"
          end: "2022-06-13T11:39:30.921Z"
      properties:
        subject:
          type: string
          minLength: 1
          description: The email address of the user to grant access to.
          format: email
        provider:
          type: string
          minLength: 1
          description: The ID of the provider to grant access to.
          example: okta
        with:
          type: object
          additionalProperties:
            type: string
          description: Provider-specific grant data. Must match the provider's schema.
        start:
          type: string
          format: date-time
          description: The start time of the grant in ISO8601 format.
          example: "2022-06-13T03:39:30.921Z"
          x-go-type: iso8601.Time
        end:
          type: string
          format: date-time
          description: The end time of the grant in ISO8601 format.
          example: "2022-06-13T11:39:30.921Z"
          x-go-type: iso8601.Time
        id:
          type: string
          description: An id to assign to this new grant
      required:
        - subject
        - provider
        - with
        - start
        - end
        - id
    ProviderHealth:
      title: ProviderHealth
      type: object
      x-examples: {}
      properties:
        id:
          type: string
          example: okta
          description: The provider ID.
          x-go-name: ID
        healthy:
          type: boolean
          description: Whether the provider is healthy.
        error:
          type: string
          example: API_TOKEN secret has not been provided
          description: "A descriptive error message, if the provider isn't healthy."
          nullable: true
      required:
        - id
        - healthy
    Provider:
      title: Provider
      type: object
      description: Provider
      properties:
        id:
          type: string
        type:
          type: string
        isDeprecated:
          type: boolean
      required:
        - id
        - type
        - isDeprecated
    Option:
      title: Option
      type: object
      properties:
        label:
          type: string
        value:
          type: string
      required:
        - label
        - value
    AccessInstructions:
      title: AccessInstructions
      x-stoplight:
        id: 56g6qww0dpbvx
      type: object
      description: |-
        Instructions on how to access the requested resource.

        The `instructions` field will be null if no instructions are available.
      properties:
        instructions:
          description: Instructions on how to access the role or resource.
          type: string
    ProviderConfigValidation:
      title: ProviderConfigValidation
      x-stoplight:
        id: 1nm3rev9qez9b
      type: object
      description: A validation against the configuration values of the Access Provider.
      properties:
        id:
          type: string
          description: "The ID of the validation, such as `list-sso-users`."
        name:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - SUCCESS
            - PENDING
            - ERROR
          description: The status of the validation.
        fieldsValidated:
          type: array
          description: "The particular config fields validated, if any."
          items:
            type: string
        logs:
          type: array
          items:
            $ref: "#/components/schemas/Log"
      required:
        - id
        - name
        - status
        - fieldsValidated
        - logs
    Log:
      title: Log
      x-stoplight:
        id: 1nm3rev9qez9b
      type: object
      description: A log entry.
      properties:
        level:
          type: string
          description: The log level.
          enum:
            - INFO
            - WARNING
            - ERROR
        msg:
          type: string
          description: The log message.
      required:
        - level
        - msg
  requestBodies:
    ValidateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              uses:
                type: string
                description: The full type definition of the provider
                example: commonfate/aws-sso
              with:
                x-go-type: "map[string]string"
                type: object
                additionalProperties:
                  type: string
                description: The provider's configuration.
            required:
              - uses
              - with
  responses:
    HealthResponse:
      description: Healthcheck response body.
      content:
        application/json:
          schema:
            type: object
            properties:
              health:
                $ref: "#/components/schemas/ProviderHealth"
          examples: {}
    ErrorResponse:
      description: An error returned from the Access Handler.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
          examples: {}
    GrantResponse:
      description: A single Grant.
      content:
        application/json:
          schema:
            type: object
            properties:
              grant:
                $ref: "#/components/schemas/Grant"
            required:
              - grant
    ArgOptionsResponse:
      description: Options for an Grant argument.
      content:
        application/json:
          schema:
            type: object
            properties:
              hasOptions:
                type: boolean
                description: Whether any options have been suggested for the argument.
              options:
                type: array
                description: The suggested options.
                items:
                  $ref: "#/components/schemas/Option"
            required:
              - hasOptions
              - options
    ValidateResponse:
      description: Validation of a provider's configuration.
      content:
        application/json:
          schema:
            type: object
            properties:
              validations:
                type: array
                items:
                  $ref: "#/components/schemas/ProviderConfigValidation"
            required:
              - validations
tags:
  - name: grants
  - name: runtime
