openapi: 3.0.0
info:
  title: Common Fate
  version: "1.0"
  contact:
    name: Common Fate
    url: "https://commonfate.io"
  description: Common Fate API
servers:
  - url: "http://localhost:8080"
paths:
  "/api/v1/users/{userId}":
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get a user
      tags:
        - End User
      operationId: user-get-user
      description: Returns a Common Fate user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/v1/users/me:
    get:
      summary: Get details for the current user
      tags:
        - End User
      operationId: user-get-me
      description: Returns information about the currently logged in user.
      responses:
        "200":
          $ref: "#/components/responses/AuthUserResponse"
        "401":
          description: Unauthorized
  /api/v1/admin/deployment/version:
    get:
      summary: Get deployment version details
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/DeploymentVersionResponse"
      operationId: admin-get-deployment-version
      description: Returns the version information
    parameters: []
  /api/v1/admin/access-rules:
    get:
      summary: List Access Rules
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/ListAccessRulesResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-list-access-rules
      description: List all access rules
      parameters:
        - schema:
            type: string
          in: query
          name: nextToken
          description: Next page token
    post:
      summary: Create Access Rule
      operationId: admin-create-access-rule
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessRule"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Create an access rule
      requestBody:
        $ref: "#/components/requestBodies/CreateAccessRuleRequest"
      tags:
        - Admin
    parameters: []
  "/api/v1/admin/access-rules/{ruleId}":
    get:
      summary: Get Access Rule
      tags:
        - Admin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessRule"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-get-access-rule
      description: Get an Access Rule.
    parameters:
      - schema:
          type: string
        name: ruleId
        in: path
        required: true
    put:
      summary: Update Access Rule
      operationId: admin-update-access-rule
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessRule"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      requestBody:
        $ref: "#/components/requestBodies/CreateAccessRuleRequest"
      description: Updates an Access Rule. Updating a rule creates a new version.
      tags:
        - Admin
    delete:
      summary: Delete Access Rule
      operationId: admin-delete-access-rule
      responses:
        "204":
          description: No Content
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
  /api/v1/admin/requests:
    get:
      summary: Your GET endpoint
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/ListRequestsResponse"
      operationId: admin-list-requests
      description: Return a list of all requests
      parameters:
        - schema:
            type: string
            enum:
              - CANCELLED
              - PENDING
              - COMPLETE
              - ACTIVE
              - REVOKED
          in: query
          description: omit this param to view all results
          name: status
        - schema:
            type: string
          in: query
          name: nextToken
          description: encrypted token containing pagination info
  "/api/v1/admin/users/{userId}":
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    post:
      summary: Update User
      operationId: admin-update-user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Update a user including group membership
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                groups:
                  type: array
                  items:
                    type: string
              required:
                - groups
      tags:
        - Admin
  /api/v1/admin/users:
    get:
      summary: Returns a list of users
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/ListUserResponse"
      operationId: admin-list-users
      description: Fetch a list of users
      parameters:
        - schema:
            type: string
          in: query
          name: nextToken
          description: encrypted token containing pagination info
    post:
      summary: Create User
      operationId: admin-create-user
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Create new user in the Cognito user pool if it is enabled.
      requestBody:
        $ref: "#/components/requestBodies/CreateUserRequest"
      tags:
        - Admin
  /api/v1/admin/groups:
    get:
      summary: List groups
      tags:
        - Admin
      operationId: admin-list-groups
      description: Lists all active groups
      responses:
        "200":
          $ref: "#/components/responses/ListGroupsResponse"
      parameters:
        - schema:
            type: string
          in: query
          name: nextToken
          description: encrypted token containing pagination info
        - schema:
            type: string
            enum:
              - INTERNAL
              - EXTERNAL
          in: query
          name: source
    parameters: []
    post:
      summary: Create Group
      operationId: admin-create-group
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Create new group in the Cognito user pool if it is enabled.
      requestBody:
        $ref: "#/components/requestBodies/CreateGroupRequest"
      tags:
        - Admin
  "/api/v1/admin/groups/{groupId}":
    parameters:
      - schema:
          type: string
        name: groupId
        in: path
        required: true
    get:
      summary: Get Group Details
      tags:
        - Admin
      operationId: admin-get-group
      description: Returns information for a group.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
    put:
      summary: Update Group
      operationId: admin-update-group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      requestBody:
        $ref: "#/components/requestBodies/CreateGroupRequest"
      description: Update a group
      tags:
        - Admin
    delete:
      summary: Delete Group
      operationId: admin-delete-group
      tags:
        - Admin
      responses:
        "200":
          description: OK
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Delete an internal group
  /api/v1/admin/identity/sync:
    parameters: []
    post:
      summary: Sync Identity
      operationId: admin-sync-identity
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Run the identity sync operation on demand
      tags:
        - Admin
  /api/v1/admin/identity:
    get:
      summary: Get identity configuration
      tags:
        - Admin
      responses:
        "200":
          $ref: "#/components/responses/IdentityConfigurationResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-get-identity-configuration
      description: Get information about the identity configuration
  "/api/v1/admin/handlers/{id}":
    get:
      summary: Get handler
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TGHandler"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-get-handler
      tags:
        - Admin
      description: ""
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: ""
      operationId: admin-delete-handler
      responses:
        "204":
          description: Returns no content
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Removes a handler
      tags:
        - Admin
  /api/v1/admin/handlers:
    get:
      summary: Get handlers
      responses:
        "200":
          $ref: "#/components/responses/ListHandlersResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-list-handlers
      description: ""
      tags:
        - Admin
    post:
      summary: Register a handler
      operationId: admin-register-handler
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TGHandler"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      requestBody:
        $ref: "#/components/requestBodies/RegisterHandlerRequest"
      tags:
        - Admin
      description: ""
    parameters: []
  "/api/v1/admin/target-groups/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get target group (detailed)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetGroup"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-get-target-group
      tags:
        - Admin
    delete:
      summary: delete target group
      operationId: admin-delete-target-group
      responses:
        "204":
          description: No Content
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: delete target group
      tags:
        - Admin
  /api/v1/admin/target-groups:
    get:
      summary: Get target groups
      responses:
        "200":
          $ref: "#/components/responses/ListTargetGroupResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: admin-list-target-groups
      tags:
        - Admin
    post:
      summary: Create target group
      operationId: admin-create-target-group
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetGroup"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "409":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      requestBody:
        $ref: "#/components/requestBodies/CreateTargetGroupRequest"
      tags:
        - Admin
    parameters: []
  "/api/v1/admin/target-groups/{id}/link":
    parameters:
      - schema:
          type: string
        name: id
        description: Target group ID
        in: path
        required: true
    post:
      summary: Link a target group deployment to its target group
      operationId: admin-create-target-group-link
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetRoute"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      requestBody:
        $ref: "#/components/requestBodies/CreateTargetGroupLink"
      tags:
        - Admin
  "/api/v1/admin/target-groups/{id}/unlink":
    parameters:
      - schema:
          type: string
        name: id
        description: Target group ID
        in: path
        required: true
    post:
      summary: Unlink a target group deployment from its target group
      operationId: admin-remove-target-group-link
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      parameters:
        - schema:
            type: string
          in: query
          name: deploymentId
          required: true
        - schema:
            type: string
          in: query
          name: kind
          required: true
      description: ""
      tags:
        - Admin
  "/api/v1/admin/target-groups/{id}/routes":
    parameters:
      - schema:
          type: string
        name: id
        description: Target group ID
        in: path
        required: true
    get:
      summary: ""
      operationId: admin-list-target-routes
      responses:
        "200":
          $ref: "#/components/responses/ListTargetGroupRoutes"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Lists all routes for a given Target Group
  /api/v1/admin/healthcheck-handlers:
    post:
      summary: Healthcheck Handlers
      operationId: admin-healthcheck-handlers
      responses:
        "204":
          description: No Content
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Runs the healthcheck for handlers
      tags:
        - Admin
    parameters: []
  /api/v1/entitlements:
    get:
      summary: List Entitlements
      tags: []
      responses:
        "200":
          $ref: "#/components/responses/ListEntitlementsResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: user-list-entitlements
      description: |-
        List all entitlement kinds configured in Common Fate.
        These are derived from the Target Groups.
  /api/v1/entitlements/targets:
    get:
      summary: List Entitlement Resources
      tags: []
      responses:
        "200":
          $ref: "#/components/responses/ListTargetsResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: user-list-entitlement-targets
      description: List all targets that the user has access to
      parameters:
        - schema:
            type: string
          in: query
          name: nextToken
          description: query
        - schema:
            type: string
            pattern: '^[a-zA-Z0-9-]{1,}\/[a-zA-Z0-9-]{1,}\/[a-zA-Z0-9-]{1,}$'
            example: publisher/name/kind
          in: query
          name: kind
          description: filter targets by kind
    parameters: []
  "/api/v1/preflight/{preflightId}":
    parameters:
      - schema:
          type: string
        name: preflightId
        in: path
        required: true
    get:
      summary: Get Preflight
      operationId: user-get-preflight
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preflight"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
  /api/v1/preflight:
    parameters: []
    post:
      summary: Submit Preflight
      operationId: user-request-preflight
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preflight"
              examples:
                ex_1:
                  value:
                    id: abc123
                    accessGroups:
                      - id: group-1
                        status: active
                        time:
                          maxDurationSeconds: 3600
                        targets:
                          - id: target-1
                            targetGroupId: aws-sso
                            targetGroupFrom:
                              publisher: common-fate
                              name: aws-sso
                              version: v1.0.0
                              kind: identity-provider
                            fields:
                              - id: account-id
                                fieldTitle: Account ID
                                fieldDescription: The ID of the AWS account
                                valueLabel: AWS Account ID
                                valueDescription: Please enter your AWS Account ID
                                value: "012345678912"
                              - id: accountName
                                fieldTitle: Account Name
                                fieldDescription: The name of the AWS account
                                valueLabel: AWS Account Name
                                valueDescription: Please enter your AWS Account Name
                                value: Admin
                              - id: permission-set
                                fieldTitle: Permission Set
                                fieldDescription: The name of the permission set to request access for
                                valueLabel: Permission Set Name
                                valueDescription: Please select the permission set you need access to
                                value: "arn:aws:iam::012345678912:instance-profile/permission-set-name"
                          - id: target-2
                            targetGroupId: okta
                            targetGroupFrom:
                              publisher: common-fate
                              name: okta
                              version: v1.0.0
                              kind: identity-provider
                            fields:
                              - id: account-id
                                fieldTitle: Account ID
                                fieldDescription: The ID of the Okta account
                                valueLabel: Okta Account ID
                                valueDescription: Please enter your Okta Account ID
                                value: Admin
                      - id: group-2
                        status: active
                        time:
                          maxDurationSeconds: 3600
                        targets:
                          - id: target-2
                            targetGroupId: okta
                            targetGroupFrom:
                              publisher: common-fate
                              name: okta
                              version: v1.0.0
                              kind: identity-provider
                            fields:
                              - id: account-id
                                fieldTitle: Account ID
                                fieldDescription: The ID of the Okta account
                                valueLabel: Okta Account ID
                                valueDescription: Please enter your Okta Account ID
                                value: Admin
                    createdAt: "2021-09-01T12:00:00Z"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Verify and validate a collection of request items
      requestBody:
        $ref: "#/components/requestBodies/CreatePreflightRequest"
  /api/v1/reviews:
    get:
      summary: List Reviews
      tags: []
      responses:
        "200":
          $ref: "#/components/responses/ListRequestsResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: user-list-reviews
      description: Lists requests where the user is a reviewer
      parameters:
        - schema:
            type: string
            enum:
              - CANCELLED
              - PENDING
              - COMPLETE
              - ACTIVE
              - REVOKED
          in: query
          name: status
          description: omit this param to view all results
        - schema:
            type: string
          in: query
          name: nextToken
          description: pagination token
    parameters: []
  /api/v1/requests:
    get:
      summary: List Requests
      tags: []
      responses:
        "200":
          $ref: "#/components/responses/ListRequestsResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: user-list-requests
      description: Lists a users own requests
      parameters:
        - schema:
            type: string
          in: query
          name: nextToken
          description: pagination token
        - schema:
            type: string
            enum:
              - UPCOMING
              - PAST
          in: query
          name: filter
          description: filter for past or upcoming requests
    parameters: []
    post:
      summary: ""
      operationId: user-post-requests
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
              examples:
                ex_1:
                  value:
                    id: example
                    purpose:
                      reason: string
                    accessGroups:
                      - id: string
                        requestId: string
                        status: DECLINED
                        time:
                          durationSeconds: 0
                          startTime: "14:15:22Z"
                        overrideTiming:
                          durationSeconds: 0
                          startTime: "14:15:22Z"
                        updatedAt: string
                        createdAt: string
                        targets:
                          - id: string
                            requestId: string
                            accessGroupId: string
                            targetGroupId: string
                            targetGroupFrom:
                              publisher: string
                              name: string
                              version: string
                              kind: string
                            fields:
                              - id: string
                                fieldTitle: string
                                fieldDescription: string
                                valueLabel: string
                                valueDescription: string
                                value: string
                            status: PENDING_PROVISIONING
                        approvalMethod: AUTOMATIC
                    requestedBy: string
                    requestedAt: "14:15:22Z"
                    status: CANCELLED
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      description: Initiates the granting process for a group of requests
      requestBody:
        $ref: "#/components/requestBodies/CreateAccessRequestRequest"
  "/api/v1/requests/{requestId}/review/{groupId}":
    parameters:
      - schema:
          type: string
        name: requestId
        in: path
        required: true
      - schema:
          type: string
        name: groupId
        in: path
        required: true
    post:
      summary: Review a request
      operationId: user-review-request
      responses:
        "200":
          $ref: "#/components/responses/ReviewResponse"
      tags:
        - End User
      description: "Review an access request made by a user. The reviewing user must be an approver for a request. Users cannot review their own requests, even if they are an approver for the Access Rule."
      requestBody:
        $ref: "#/components/requestBodies/ReviewRequest"
  "/api/v1/requests/{requestid}/revoke":
    parameters:
      - schema:
          type: string
        name: requestid
        in: path
        required: true
    post:
      summary: Revoke an active request
      operationId: user-revoke-request
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      tags:
        - End User
      description: "Admins and approvers can revoke access previously approved. Effective immediately "
  "/api/v1/requests/{requestid}/cancel":
    parameters:
      - schema:
          type: string
        name: requestid
        in: path
        required: true
    post:
      summary: Revoke an active request
      operationId: user-cancel-request
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      tags:
        - End User
      description: "Admins and approvers can cancel access before provisioned. Effective immediately "
  "/api/v1/requests/{requestId}":
    get:
      summary: Get Request
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Request"
              examples:
                ex_1:
                  value:
                    id: string
                    purpose:
                      reason: string
                    accessGroups:
                      - id: string
                        requestId: string
                        status: PENDING_APPROVAL
                        time:
                          durationSeconds: 0
                          startTime: "14:15:22Z"
                        overrideTiming:
                          durationSeconds: 0
                          startTime: "14:15:22Z"
                        updatedAt: string
                        createdAt: string
                        requestedBy:
                          id: string
                          firstName: string
                          lastName: string
                          email: string
                          picture: string
                        targets:
                          - id: string
                            requestId: string
                            accessGroupId: string
                            targetGroupId: string
                            targetGroupFrom:
                              publisher: string
                              name: string
                              version: string
                              kind: string
                            targetGroupIcon: string
                            fields:
                              - id: string
                                fieldTitle: string
                                fieldDescription: string
                                valueLabel: string
                                valueDescription: string
                                value: string
                            status: PENDING_PROVISIONING
                            requestedBy:
                              id: string
                              firstName: string
                              lastName: string
                              email: string
                              picture: string
                        approvalMethod: AUTOMATIC
                        accessRule:
                          timeConstraints:
                            maxDurationSeconds: 60
                    requestedBy:
                      id: string
                      firstName: string
                      lastName: string
                      email: string
                      picture: string
                    requestedAt: "14:15:22Z"
                    status: CANCELLED
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: user-get-request
      description: Gets information for a request
    parameters:
      - schema:
          type: string
        name: requestId
        in: path
        required: true
  "/api/v1/requests/{requestId}/events":
    parameters:
      - schema:
          type: string
        name: requestId
        in: path
        required: true
    get:
      summary: List request events
      responses:
        "200":
          $ref: "#/components/responses/ListRequestEventsResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: user-list-request-events
      description: |
        Returns a HTTP401 response if the user is not the requestor or a reviewer.
      tags:
        - End User
      parameters: []
  "/api/v1/targets/{targetId}/access-instructions":
    parameters:
      - schema:
          type: string
        name: targetId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        "200":
          $ref: "#/components/responses/AccessInstructionsResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"
      operationId: get-group-target-instructions
components:
  schemas:
    User:
      title: User
      type: object
      x-examples:
        Josh:
          id: string
          email: string
          name: string
          picture: "https://avatars.githubusercontent.com/u/17420369?v=4"
        Chris:
          id: string
          email: chris@commonfate.io
          name: Chris Norman
          picture: "https://avatars.githubusercontent.com/u/14214200?v=4"
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        picture:
          type: string
        status:
          $ref: "#/components/schemas/IdpStatus"
        lastName:
          type: string
        updatedAt:
          type: string
          x-go-type: time.Time
          format: time
        groups:
          type: array
          items:
            type: string
      required:
        - id
        - email
        - firstName
        - picture
        - status
        - lastName
        - updatedAt
        - groups
    Group:
      title: Group
      type: object
      description: ""
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: string
        memberCount:
          type: integer
        members:
          type: array
          items:
            type: string
        source:
          type: string
      required:
        - name
        - description
        - id
        - memberCount
        - members
        - source
    IdpStatus:
      type: string
      title: IdpStatus
      x-stoplight:
        id: a3fdr17gch04a
      enum:
        - ARCHIVED
        - ACTIVE
    AccessRule:
      title: AccessRule
      type: object
      description: AccessRule contains detailed information about a rule and is used in administrative apis.
      properties:
        id:
          type: string
          x-go-name: ID
          example: rul_28w2Eebt2Q8nFQJ2dKa1FTE9X0J
        name:
          type: string
          example: Okta admin
        description:
          type: string
          example: Admin access to Okta
        targets:
          type: array
          items:
            $ref: "#/components/schemas/AccessRuleTarget"
        timeConstraints:
          $ref: "#/components/schemas/AccessRuleTimeConstraints"
        groups:
          description: The group IDs that the access rule applies to.
          type: array
          items:
            type: string
        approval:
          $ref: "#/components/schemas/AccessRuleApproverConfig"
        metadata:
          $ref: "#/components/schemas/AccessRuleMetadata"
        priority:
          type: integer
          minimum: 0
      required:
        - id
        - name
        - description
        - targets
        - timeConstraints
        - groups
        - approval
        - metadata
        - priority
    AccessRuleMetadata:
      title: AccessRuleMetadata
      type: object
      properties:
        createdAt:
          type: string
          x-go-type: time.Time
        createdBy:
          type: string
        updatedAt:
          type: string
          x-go-type: time.Time
          format: time
        updatedBy:
          type: string
        updateMessage:
          type: string
      required:
        - createdAt
        - createdBy
        - updatedAt
        - updatedBy
    AccessRuleApproverConfig:
      title: ApproverConfig
      type: object
      description: Approver config for access rules
      properties:
        users:
          type: array
          description: The user IDs of the approvers for the request.
          items:
            type: string
        groups:
          type: array
          items:
            type: string
      x-stoplight:
        id: 4f87f733cb70f
    AccessRuleTimeConstraints:
      title: TimeConstraints
      type: object
      description: Time configuration for an Access Rule.
      x-stoplight:
        id: 1fe6870129392
      properties:
        maxDurationSeconds:
          type: integer
          description: The maximum duration in seconds the access is allowed for.
          minimum: 60
          exclusiveMinimum: false
          maximum: 15724800
        defaultDurationSeconds:
          type: integer
          description: The default duration in seconds the access is allowed for.
          minimum: 60
          exclusiveMinimum: false
          maximum: 15724800
      required:
        - maxDurationSeconds
        - defaultDurationSeconds
    CreateAccessRuleTarget:
      title: CreateAccessRuleTarget
      type: object
      description: a request body for creating a Access Rule Target
      properties:
        targetGroupId:
          type: string
        fieldFilterExpessions:
          type: object
      required:
        - targetGroupId
        - fieldFilterExpessions
    AccessRuleTarget:
      title: AccessRuleTarget
      type: object
      description: a request body for an Access Rule Target
      x-stoplight:
        id: d39d43ed71c33
      properties:
        targetGroup:
          $ref: "#/components/schemas/TargetGroup"
        fieldFilterExpessions:
          type: object
      required:
        - targetGroup
        - fieldFilterExpessions
    TGHandler:
      title: TGHandler
      x-stoplight:
        id: dfd783fec606a
      type: object
      x-tags:
        - Target Groups
      properties:
        id:
          type: string
        runtime:
          type: string
        functionArn:
          type: string
        awsAccount:
          type: string
        awsRegion:
          type: string
        healthy:
          type: boolean
        diagnostics:
          type: array
          items:
            $ref: "#/components/schemas/Diagnostic"
      required:
        - id
        - runtime
        - functionArn
        - awsAccount
        - awsRegion
        - healthy
        - diagnostics
      description: |-
        Handler represents a deployment of a provider. 
        Handlers can be linked to target groups via routes
    TargetGroup:
      title: TargetGroup
      x-stoplight:
        id: wcyzfn1kp9xkx
      type: object
      properties:
        id:
          type: string
        schema:
          $ref: "#/components/schemas/TargetGroupSchema"
        from:
          $ref: "#/components/schemas/TargetGroupFrom"
        icon:
          type: string
        createdAt:
          type: string
          x-go-type: time.Time
        updatedAt:
          type: string
          x-go-type: time.Time
          format: time
      required:
        - id
        - schema
        - from
        - icon
    TargetGroupFrom:
      title: TargetGroupFrom
      x-stoplight:
        id: 1beeb9df4c57d
      type: object
      properties:
        publisher:
          type: string
        name:
          type: string
        version:
          type: string
        kind:
          type: string
      required:
        - publisher
        - name
        - version
        - kind
      description: Specifies a particular Access Provider to create a Target Group schema from.
    TargetGroupSchema:
      title: Target Group Schema
      x-stoplight:
        id: 7ba34eb453d65
      type: object
      additionalProperties:
        $ref: "#/components/schemas/TargetGroupSchemaArgument"
    TargetGroupSchemaArgument:
      title: Target Group Schema Argument
      x-stoplight:
        id: 674a9bde14c32
      type: object
      description: "Define the metadata, data type and UI elements for the argument"
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
      required:
        - id
        - title
    TargetRoute:
      type: object
      x-stoplight:
        id: a3339ab311211
      title: TargetRoute
      properties:
        targetGroupId:
          type: string
        handlerId:
          type: string
        kind:
          type: string
        priority:
          type: integer
        valid:
          type: boolean
        diagnostics:
          type: array
          items:
            $ref: "#/components/schemas/Diagnostic"
      required:
        - targetGroupId
        - handlerId
        - kind
        - priority
        - valid
        - diagnostics
    Diagnostic:
      title: Diagnostic
      x-stoplight:
        id: fb62cbb9bc444
      type: object
      properties:
        level:
          $ref: "#/components/schemas/LogLevel"
        code:
          type: string
        message:
          type: string
      required:
        - level
        - code
        - message
    LogLevel:
      title: LogLevel
      x-stoplight:
        id: pcykc8l1vd4o2
      type: string
      enum:
        - INFO
        - WARNING
        - ERROR
    Preflight:
      title: Preflight
      x-stoplight:
        id: o88cq9el7rshq
      type: object
      properties:
        id:
          type: string
        accessGroups:
          type: array
          items:
            $ref: "#/components/schemas/PreflightAccessGroup"
        createdAt:
          type: string
          x-go-type: time.Time
      required:
        - id
        - accessGroups
        - createdAt
    PreflightAccessGroup:
      title: PreflightAccessGroup
      type: object
      x-stoplight:
        id: 9f3a10a488434
      properties:
        id:
          type: string
        requiresApproval:
          type: boolean
        timeConstraints:
          $ref: "#/components/schemas/AccessRuleTimeConstraints"
        targets:
          type: array
          items:
            $ref: "#/components/schemas/Target"
      required:
        - id
        - requiresApproval
        - timeConstraints
        - targets
    Target:
      title: Target
      x-stoplight:
        id: 9wq5hjssi6r46
      type: object
      x-examples:
        Example 1:
          id: string
          targetGroupId: string
          targetGroupFrom:
            publisher: string
            name: string
            version: string
            kind: string
          fields:
            - id: string
              fieldTitle: string
              fieldDescription: string
              valueLabel: string
              valueDescription: string
              value: string
      properties:
        id:
          type: string
        kind:
          $ref: "#/components/schemas/TargetKind"
        fields:
          type: array
          items:
            $ref: "#/components/schemas/TargetField"
      required:
        - id
        - kind
        - fields
    TargetKind:
      title: Target From
      type: object
      x-examples:
        Example 1:
          id: string
          targetGroupId: string
          targetGroupFrom:
            publisher: string
            name: string
            version: string
            kind: string
          fields:
            - id: string
              fieldTitle: string
              fieldDescription: string
              valueLabel: string
              valueDescription: string
              value: string
      x-stoplight:
        id: 9fe3f8f463101
      properties:
        publisher:
          type: string
        name:
          type: string
        kind:
          type: string
        icon:
          type: string
      required:
        - publisher
        - name
        - kind
        - icon
    TargetField:
      title: Field
      x-stoplight:
        id: 1b07f4c301de5
      type: object
      properties:
        id:
          type: string
        fieldTitle:
          type: string
        fieldDescription:
          type: string
        valueLabel:
          type: string
        valueDescription:
          type: string
        value:
          type: string
      required:
        - id
        - fieldTitle
        - valueLabel
        - value
    Request:
      title: Request
      type: object
      description: A request to access something made by an end user in Common Fate.
      x-examples:
        Example 1:
          id: string
          purpose:
            reason: string
          accessGroups:
            - id: string
              requestId: string
              status: APPROVED
              time:
                maxDurationSeconds: 60
              overrideTiming:
                durationSeconds: 0
                startTime: "14:15:22Z"
              updatedAt: string
              createdAt: string
              targets:
                - id: string
                  requestId: string
                  accessGroupId: string
                  targetGroupId: string
                  targetGroupFrom:
                    publisher: string
                    name: string
                    version: string
                    kind: string
                  fields:
                    - id: string
                      fieldTitle: string
                      fieldDescription: string
                      valueLabel: string
                      valueDescription: string
                      value: string
                  status: PENDING
          requestedBy: string
          requestedAt: "14:15:22Z"
      properties:
        id:
          type: string
          x-go-name: ID
        purpose:
          $ref: "#/components/schemas/RequestPurpose"
        accessGroups:
          type: array
          items:
            $ref: "#/components/schemas/RequestAccessGroup"
        requestedBy:
          $ref: "#/components/schemas/RequestRequestedBy"
        requestedAt:
          type: string
          x-go-type: time.Time
          format: time
        status:
          $ref: "#/components/schemas/RequestStatus"
        targetCount:
          type: integer
      required:
        - id
        - purpose
        - accessGroups
        - requestedBy
        - requestedAt
        - status
        - targetCount
    RequestRequestedBy:
      title: Request Requested By
      type: object
      description: The user who requested access
      x-examples:
        Example 1:
          id: string
          purpose:
            reason: string
          accessGroups:
            - id: string
              requestId: string
              status: APPROVED
              time:
                maxDurationSeconds: 60
              overrideTiming:
                durationSeconds: 0
                startTime: "14:15:22Z"
              updatedAt: string
              createdAt: string
              targets:
                - id: string
                  requestId: string
                  accessGroupId: string
                  targetGroupId: string
                  targetGroupFrom:
                    publisher: string
                    name: string
                    version: string
                    kind: string
                  fields:
                    - id: string
                      fieldTitle: string
                      fieldDescription: string
                      valueLabel: string
                      valueDescription: string
                      value: string
                  status: PENDING
          requestedBy: string
          requestedAt: "14:15:22Z"
      x-stoplight:
        id: bd24ac9430a01
      properties:
        id:
          type: string
          x-go-name: ID
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        picture:
          type: string
      required:
        - id
        - firstName
        - lastName
        - email
    RequestPurpose:
      title: RequestContext
      type: object
      x-stoplight:
        id: 169e2b3eec7f8
      properties:
        reason:
          type: string
    RequestStatus:
      type: string
      description: |
        The status of an Access Request.
      enum:
        - CANCELLED
        - REVOKED
        - REVOKING
        - PENDING
        - COMPLETE
        - ACTIVE
      title: RequestStatus
    RequestEvent:
      title: RequestEvent
      x-stoplight:
        id: x15z5qclesdq9
      type: object
      properties:
        id:
          type: string
        requestId:
          type: string
        createdAt:
          type: string
          x-go-type: time.Time
          format: time
        actor:
          type: string
        fromStatus:
          $ref: "#/components/schemas/RequestStatus"
        toStatus:
          $ref: "#/components/schemas/RequestStatus"
        fromTiming:
          $ref: "#/components/schemas/RequestAccessGroupTiming"
        toTiming:
          $ref: "#/components/schemas/RequestAccessGroupTiming"
        fromGrantStatus:
          $ref: "#/components/schemas/RequestAccessGroupTargetStatus"
        toGrantStatus:
          $ref: "#/components/schemas/RequestAccessGroupTargetStatus"
        grantCreated:
          type: boolean
        requestCreated:
          type: boolean
        grantFailureReason:
          type: string
        recordedEvent:
          type: object
          x-go-type: "map[string]string"
          description: An event which was recorded relating to the grant.
        target:
          $ref: "#/components/schemas/RequestAccessGroupTarget"
        fromGroupStatus:
          $ref: "#/components/schemas/RequestAccessGroupStatus"
        toGroupStatus:
          $ref: "#/components/schemas/RequestAccessGroupStatus"
      required:
        - id
        - requestId
        - createdAt
    RequestAccessGroup:
      title: AccessGroup
      x-stoplight:
        id: 34f262dc0fd95
      type: object
      properties:
        id:
          type: string
        requestId:
          type: string
        status:
          $ref: "#/components/schemas/RequestAccessGroupStatus"
        requestedTiming:
          $ref: "#/components/schemas/RequestAccessGroupTiming"
        overrideTiming:
          $ref: "#/components/schemas/RequestAccessGroupTiming"
        updatedAt:
          type: string
          x-go-type: time.Time
        createdAt:
          type: string
          x-go-type: time.Time
        requestedBy:
          $ref: "#/components/schemas/RequestRequestedBy"
        targets:
          type: array
          items:
            $ref: "#/components/schemas/RequestAccessGroupTarget"
        approvalMethod:
          $ref: "#/components/schemas/RequestAccessGroupApprovalMethod"
        accessRule:
          $ref: "#/components/schemas/RequestAccessGroupAccessRule"
        requestStatus:
          $ref: "#/components/schemas/RequestStatus"
        requestReviewers:
          type: array
          items:
            type: string
        groupReviewers:
          type: array
          items:
            type: string
        finalTiming:
          $ref: "#/components/schemas/RequestAccessGroupFinalTiming"
      required:
        - id
        - requestId
        - status
        - requestedTiming
        - updatedAt
        - createdAt
        - requestedBy
        - targets
        - accessRule
        - requestStatus
    RequestAccessGroupAccessRule:
      title: RequestAccessGroupAccessRule
      type: object
      x-stoplight:
        id: 9c910ef95507c
      properties:
        timeConstraints:
          $ref: "#/components/schemas/AccessRuleTimeConstraints"
      required:
        - timeConstraints
    RequestAccessGroupApprovalMethod:
      type: string
      description: "Describes whether a request has been approved automatically or from a review "
      title: ApprovalMethod
      x-stoplight:
        id: b183b2aaba142
      enum:
        - AUTOMATIC
        - REVIEWED
    RequestAccessGroupStatus:
      type: string
      description: |
        The status of an Access Request.
      enum:
        - DECLINED
        - APPROVED
        - PENDING_APPROVAL
      title: RequestStatus
      x-stoplight:
        id: e1005d029a08c
    RequestAccessGroupTiming:
      title: RequestAccessGroupTiming
      x-stoplight:
        id: 5156ae0f9bb5b
      type: object
      properties:
        durationSeconds:
          type: integer
        startTime:
          type: string
          description: iso8601 timestamp in UTC timezone
          x-go-type: time.Time
          format: time
      required:
        - durationSeconds
    RequestAccessGroupFinalTiming:
      title: RequestAccessGroupFinalTiming
      type: object
      x-stoplight:
        id: 80b306d6a3bb7
      description: "The final timing made for the grant, denormalised onto hte group "
      properties:
        startTime:
          type: string
          description: iso8601 timestamp in UTC timezone
          x-go-type: time.Time
          format: time
        endTime:
          type: string
          description: iso8601 timestamp in UTC timezone
          x-go-type: time.Time
          format: time
      required:
        - startTime
        - endTime
    RequestAccessGroupTarget:
      description: A temporary assignment of a user to a principal.
      type: object
      title: Access Group Target
      x-examples:
        Okta:
          id: aba0dcba-0a8c-4393-ad92-69510326b29a
          status: PENDING
          subject: user@example.com
          provider: okta
          with:
            group: Admins
          start: "2022-06-13T03:39:30.921Z"
          end: "2022-06-13T11:39:30.921Z"
      x-stoplight:
        id: 3d80288c0358c
      properties:
        id:
          type: string
        requestId:
          type: string
        accessGroupId:
          type: string
        targetGroupId:
          type: string
        targetKind:
          $ref: "#/components/schemas/TargetKind"
        fields:
          type: array
          items:
            $ref: "#/components/schemas/TargetField"
        status:
          $ref: "#/components/schemas/RequestAccessGroupTargetStatus"
        requestedBy:
          $ref: "#/components/schemas/RequestRequestedBy"
      required:
        - id
        - requestId
        - accessGroupId
        - targetGroupId
        - targetKind
        - fields
        - status
        - requestedBy
    RequestAccessGroupTargetStatus:
      type: string
      description: |
        The status of a grant.
      title: RequestAccessGroupTargetStatus
      x-stoplight:
        id: 92eb004906577
      enum:
        - PENDING_PROVISIONING
        - AWAITING_START
        - ACTIVE
        - ERROR
        - REVOKED
        - EXPIRED
    RequestAccessGroupTargetAccessInstructions:
      title: AccessInstructions
      x-stoplight:
        id: 96aacba377a2b
      type: object
      description: |-
        Instructions on how to access the requested resource.

        The `instructions` field will be null if no instructions are available.
      properties:
        instructions:
          description: Instructions on how to access the role or resource.
          type: string
    ReviewDecision:
      type: string
      title: ReviewDecision
      enum:
        - APPROVED
        - DECLINED
      description: A decision made on an Access Request.
    CreateAccessRequestGroupOptions:
      type: object
      title: CreateAccessRequestGroupOptions
      x-stoplight:
        id: 6f6c2fa4da748
      properties:
        id:
          type: string
        timing:
          $ref: "#/components/schemas/RequestAccessGroupTiming"
      required:
        - id
        - timing
  responses:
    ErrorResponse:
      description: An error returned from the service.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
          examples: {}
    ListUserResponse:
      description: Paginated list of users
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: "#/components/schemas/User"
              next:
                type: string
                nullable: true
            required:
              - users
              - next
          examples: {}
    ListAccessRulesResponse:
      description: A list of Access Rules.
      content:
        application/json:
          schema:
            type: object
            properties:
              accessRules:
                type: array
                items:
                  $ref: "#/components/schemas/AccessRule"
              next:
                type: string
                nullable: true
            required:
              - accessRules
              - next
    ListRequestsResponse:
      description: Paginated list of Requests
      content:
        application/json:
          schema:
            type: object
            properties:
              requests:
                type: array
                items:
                  $ref: "#/components/schemas/Request"
              next:
                type: string
                nullable: true
            required:
              - requests
              - next
    ListGroupsResponse:
      description: Returns a list of Groups
      content:
        application/json:
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
              next:
                type: string
                nullable: true
            required:
              - groups
              - next
    ReviewResponse:
      description: Response for reviewing a request.
      content:
        application/json:
          schema:
            type: object
            properties:
              request:
                $ref: "#/components/schemas/Request"
    AuthUserResponse:
      description: Details about the authenticated user
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                $ref: "#/components/schemas/User"
              isAdmin:
                description: Whether the user is an administrator of Common Fate.
                type: boolean
            required:
              - user
              - isAdmin
    ListRequestEventsResponse:
      description: Paginated list of RequestEvent
      content:
        application/json:
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  $ref: "#/components/schemas/RequestEvent"
              next:
                type: string
                nullable: true
            required:
              - events
              - next
    IdentityConfigurationResponse:
      description: Returns information about the identity configuration of this deployment.
      content:
        application/json:
          schema:
            type: object
            properties:
              identityProvider:
                type: string
              administratorGroupId:
                type: string
            required:
              - identityProvider
              - administratorGroupId
    DeploymentVersionResponse:
      description: Deployment version information.
      content:
        application/json:
          schema:
            type: object
            properties:
              version:
                type: string
                description: 'The deployment version. Will be a semver, such as "v0.9.0" for official releases, or "dev+GIT_HASH" for pre-release builds.'
            required:
              - version
    ListAccessGroupsResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/components/schemas/RequestAccessGroup"
              next:
                type: string
            required:
              - groups
    ListTargetGroupResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              targetGroups:
                type: array
                items:
                  $ref: "#/components/schemas/TargetGroup"
            required:
              - targetGroups
    ListHandlersResponse:
      description: Response obj for ListTargetGroupDeploymentAPIResponse
      content:
        application/json:
          schema:
            type: object
            properties:
              res:
                type: array
                items:
                  $ref: "#/components/schemas/TGHandler"
              next:
                type: string
            required:
              - res
              - next
    ListTargetGroupRoutes:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              routes:
                type: array
                items:
                  $ref: "#/components/schemas/TargetRoute"
              next:
                type: string
            required:
              - routes
    ListGrantsResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              grants:
                type: array
                items:
                  $ref: "#/components/schemas/RequestAccessGroupTarget"
              next:
                type: string
            required:
              - grants
    ListTargetsResponse:
      description: list of target entitlements for a user
      content:
        application/json:
          schema:
            type: object
            properties:
              targets:
                type: array
                items:
                  $ref: "#/components/schemas/Target"
              next:
                type: string
            required:
              - targets
          examples:
            Example 1:
              value:
                targets:
                  - id: string
                    kind:
                      publisher: string
                      name: string
                      kind: string
                      icon: string
                    fields:
                      - id: string
                        fieldTitle: string
                        fieldDescription: string
                        valueLabel: string
                        valueDescription: string
                        value: string
                next: string
    ListEntitlementsResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              entitlements:
                type: array
                items:
                  $ref: "#/components/schemas/TargetKind"
            required:
              - entitlements
          examples:
            example_targets:
              value:
                targets:
                  - id: 1a3a6e75-fc32-4f36-8d7c-9fe2f7c0a2a1
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: aws
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: cc4c4d4d-4e5f-4c3d-b5c5-5f5a5d5e5b5c
                        fieldTitle: Account Name
                        fieldDescription: The unique account name
                        valueLabel: Account
                        valueDescription: The unique account name
                        value: Admin
                      - id: cc4c4d4d-4e5f-4c3d-b5c5-5f5a5d5e5b5c
                        fieldTitle: Account Number
                        fieldDescription: The unique account number
                        valueLabel: Account
                        valueDescription: The unique account number
                        value: "123456789012"
                      - id: 5c5a5d5e-4d4e-5f5a-5b5c-cc4c4d4d4e5f
                        fieldTitle: Role ARN
                        fieldDescription: The Amazon Resource Name (ARN) of the role to assume
                        valueLabel: Role ARN
                        valueDescription: The Amazon Resource Name (ARN) of the role to assume
                        value: "arn:aws:iam::123456789012:role/MyRole"
                  - id: f8b4e4fe-4ca4-4d3c-8d3a-5c5f5e5c3f3e
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: aws
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: cc4c4d4d-4e5f-4c3d-b5c5-5f5a5d5e5b5c
                        fieldTitle: Account Name
                        fieldDescription: The unique account name
                        valueLabel: Account
                        valueDescription: The unique account name
                        value: Sandbox
                      - id: a2a1b1b2-1a1b-2b2a-2a1b-a1b2b1a2a1b2
                        fieldTitle: Account Number
                        fieldDescription: The unique account number
                        valueLabel: Account
                        valueDescription: The unique account number
                        value: "987654321098"
                      - id: b1a2a1b2-2b2a-1a1b-a2a1-b1b2a1b2b1a2
                        fieldTitle: Role ARN
                        fieldDescription: The Amazon Resource Name (ARN) of the role to assume
                        valueLabel: Role ARN
                        valueDescription: The Amazon Resource Name (ARN) of the role to assume
                        value: "arn:aws:iam::987654321098:role/MyRole"
                  - id: d3e4f5d6-5c6b-4a3a-9c8d-9e1f2c3d4e5f
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: aws
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: cc4c4d4d-4e5f-4c3d-b5c5-5f5a5d5e5b5c
                        fieldTitle: Account Name
                        fieldDescription: The unique account name
                        valueLabel: Account
                        valueDescription: The unique account name
                        value: Development
                      - id: f5e4d3c2-1a2b-3c4d-5e6f-7a8b9c0d1e2f
                        fieldTitle: Account Number
                        fieldDescription: The unique account number
                        valueLabel: Account
                        valueDescription: The unique account number
                        value: "456789012345"
                      - id: 0d1e2f3c-4b5a-6d7e-8f9a-a1b2c3d4e5f
                        fieldTitle: Role ARN
                        fieldDescription: The Amazon Resource Name (ARN) of the role to assume
                        valueLabel: Role ARN
                        valueDescription: The Amazon Resource Name (ARN) of the role to assume
                        value: "arn:aws:iam::456789012345:role/MyRole"
                  - id: d3e4f5d6-5c6b-4a3a-9c8d-9e1f2c3d4e5f
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: okta
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
                        fieldTitle: Group Name
                        fieldDescription: The name of the group
                        valueLabel: Group Name
                        valueDescription: The name of the group
                        value: Admins
                  - id: b2c3d4e5-f6g7-h8i9-j0k1-l2m3n4o5p6q
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: okta
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: c3d4e5f6-g7h8-i9j0-k1l2-m3n4o5p6q7r
                        fieldTitle: Group Name
                        fieldDescription: The name of the group
                        valueLabel: Group Name
                        valueDescription: The name of the group
                        value: Developers
                  - id: d4e5f6g7-h8i9-j0k1-l2m3-n4o5p6q7r8s
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: okta
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: e5f6g7h8-i9j0-k1l2-m3n4-o5p6q7r8s9t
                        fieldTitle: Group Name
                        fieldDescription: The name of the group
                        valueLabel: Group Name
                        valueDescription: The name of the group
                        value: Auditors
                  - id: c3d4e5f6-g7h8-i9j0-k1l2-m3n4o5p6q7r8
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: github
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: d4e5f6g7-h8i9-j0k1-l2m3-n4o5p6q7r8s
                        fieldTitle: Repository
                        fieldDescription: The name of the repository
                        valueLabel: Repository
                        valueDescription: The name of the repository
                        value: my-project-repo
                  - id: e5f6g7h8-i9j0-k1l2-m3n4-o5p6q7r8s9
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: github
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: f6g7h8i9-j0k1-l2m3-n4o5-p6q7r8s9t0u
                        fieldTitle: Organisation
                        fieldDescription: The name of the organisation
                        valueLabel: Organisation
                        valueDescription: The name of the organisation
                        value: my-organisation
                  - id: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: cloudwatch
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: b2c3d4e5-f6g7-h8i9-j0k1-l2m3n4o5p6q
                        fieldTitle: SSO Region
                        fieldDescription: The AWS region of the SSO instance
                        valueLabel: SSO Region
                        valueDescription: The AWS region of the SSO instance
                        value: us-east-1
                      - id: c3d4e5f6-g7h8-i9j0-k1l2-m3n4o5p6q7r
                        fieldTitle: SSO Role ARN
                        fieldDescription: The Amazon Resource Name (ARN) of the role to assume in the SSO instance
                        valueLabel: SSO Role ARN
                        valueDescription: The Amazon Resource Name (ARN) of the role to assume in the SSO instance
                        value: "arn:aws:iam::123456789012:role/MyRole"
                  - id: d4e5f6g7-h8i9-j0k1-l2m3-n4o5p6q7r8s
                    targetGroupId: group-1
                    targetGroupFrom:
                      publisher: common-fate
                      name: cloudwatch
                      version: v1.0.0
                      kind: string
                    fields:
                      - id: e5f6g7h8-i9j0-k1l2-m3n4-o5p6q7r8s9t
                        fieldTitle: SSO Region
                        fieldDescription: The AWS region of the SSO instance
                        valueLabel: SSO Region
                        valueDescription: The AWS region of the SSO instance
                        value: eu-west-1
                      - id: f6g7h8i9-j0k1-l2m3-n4o5-p6q7r8s9t0
                        fieldTitle: SSO Role ARN
                        fieldDescription: The Amazon Resource Name (ARN) of the role to assume in the SSO instance
                        valueLabel: SSO Role ARN
                        valueDescription: The Amazon Resource Name (ARN) of the role to assume in the SSO instance
                        value: "arn:aws:iam::123456789012:role/MyRole"
                next: string
    AccessInstructionsResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              instructions:
                $ref: "#/components/schemas/RequestAccessGroupTargetAccessInstructions"
            required:
              - instructions
  examples: {}
  securitySchemes: {}
  requestBodies:
    CreateAccessRuleRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              groups:
                description: The group IDs that the access rule applies to.
                type: array
                items:
                  type: string
              approval:
                $ref: "#/components/schemas/AccessRuleApproverConfig"
              name:
                type: string
                example: Okta admin
                pattern: '[a-zA-Z0-9,.;:()[\]?!\-_`~&/\n\s]'
                minLength: 1
                maxLength: 400
              description:
                type: string
                example: Admin access to Okta
                pattern: '[a-zA-Z0-9,.;:()[\]?!\-_`~&/\n\s]|^$'
                minLength: 0
                maxLength: 2048
              timeConstraints:
                $ref: "#/components/schemas/AccessRuleTimeConstraints"
              targets:
                type: array
                items:
                  $ref: "#/components/schemas/CreateAccessRuleTarget"
              priority:
                type: integer
            required:
              - groups
              - approval
              - name
              - description
              - timeConstraints
              - targets
              - priority
    CreateUserRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                minLength: 1
                maxLength: 2048
              firstName:
                type: string
                minLength: 1
                maxLength: 2048
                pattern: '[a-zA-Z0-9,.;:()[\]?!\-_`~&/\n\s]'
              lastName:
                type: string
                minLength: 1
                maxLength: 2048
                pattern: '[a-zA-Z0-9,.;:()[\]?!\-_`~&/\n\s]'
              isAdmin:
                type: boolean
            required:
              - email
              - firstName
              - lastName
              - isAdmin
      description: ""
    ReviewRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              decision:
                $ref: "#/components/schemas/ReviewDecision"
              comment:
                type: string
                minLength: 0
                maxLength: 2048
              overrideTiming:
                $ref: "#/components/schemas/RequestAccessGroupTiming"
            required:
              - decision
      description: |-
        An approver's review of an Access Request.
        The access request timing can be overriden by including override timing in the request body.
        If it is omitted, the original request timing will be used.
    CreateGroupRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                minLength: 1
                pattern: "^[a-zA-Z0-9_.-]"
                maxLength: 2048
              description:
                type: string
                minLength: 0
                maxLength: 2048
              members:
                type: array
                items:
                  type: string
            required:
              - name
              - members
    CreateTargetGroupRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              from:
                $ref: "#/components/schemas/TargetGroupFrom"
              id:
                type: string
                maxLength: 64
                pattern: "^[-a-zA-Z0-9]*$"
            required:
              - from
              - id
    RegisterHandlerRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: "The ID of the target group to deploy to. User, provided"
                pattern: "^[-a-zA-Z0-9]*$"
                maxLength: 64
              runtime:
                type: string
                default: aws-lambda
              awsAccount:
                type: string
                pattern: "^[0-9]{12}"
              awsRegion:
                type: string
                pattern: ^(us(-gov)?|ap|ca|cn|eu|sa)-(central|(north|south)?(east|west)?)-\d$
                minLength: 9
                example: us-east-1
            required:
              - id
              - runtime
              - awsAccount
              - awsRegion
    CreateTargetGroupLink:
      content:
        application/json:
          schema:
            type: object
            properties:
              deploymentId:
                type: string
              priority:
                type: integer
                maximum: 999
                minimum: 0
              kind:
                type: string
            required:
              - deploymentId
              - priority
              - kind
    CreatePreflightRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              targets:
                type: array
                items:
                  type: string
            required:
              - targets
        application/xml:
          schema:
            type: object
            properties: {}
    CreateAccessRequestRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              preflightId:
                type: string
              groupOptions:
                type: array
                items:
                  $ref: "#/components/schemas/CreateAccessRequestGroupOptions"
              reason:
                type: string
            required:
              - preflightId
              - groupOptions
          examples: {}
tags:
  - name: End User
  - name: Admin
  - name: Target Groups
